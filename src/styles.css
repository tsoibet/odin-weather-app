* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: Arial, Helvetica, sans-serif;
    font-size: calc(10px + 0.4vw + 0.2vh);
}

body {
    color: white;
    background-color: rgb(45, 116, 187);
    padding: 2rem 0;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    gap: 2rem;
}

.toggleSwitch {
    position: fixed;
    right: 2rem;
    width: 4.2rem;
    height: 2rem;
    border-radius: 1rem;
    background-color: rgba(0, 0, 0, 0.3);
    outline: solid 0.2rem white;
    display: flex;
    gap: 0.2rem;
    justify-content: space-evenly;
    align-items: center;
    cursor: pointer;
}

.toggleButton {
    position: absolute;
    width: 1.8rem;
    height: 1.4rem;
    border-radius: 0.8rem;
    background-color: white;
    transform: translateX(-50%);
    transition: transform ease-in-out 300ms;
}

.toggleButton.imperial {
    transform: translateX(50%);
}

.toggle {
    z-index: 1;
    color: black;
}

.searchBar {
    margin: 0 auto;
}

input {
    appearance: none;
    border: none;
    padding: 0.5rem 1rem;
}

input:focus {
    outline: none;
}

input[type="search"] {
    background-color: white;
    color: black;
}

input[type="submit"] {
    cursor: pointer;
    background-color: rgb(15, 72, 141);
    color: white;
}

.weatherInfo {
    margin: auto;
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.currentWeather {
    margin: auto;
    width: max-content;
    background-color: rgba(0, 0, 0, 20%);
    text-shadow: 0.15rem 0.15rem 0.2rem rgba(0, 0, 0, 0.2);
    padding: 2rem;
    display: flex;
    flex-direction: column;
    gap: 0.3rem;
    align-items: center;
}

.currentWeather .cityName {
    font-size: 1.8rem;
}

.currentWeather .temp {
    font-size: 5rem;
}

.degree.metric::after {
    content: "°C";
    font-size: 0.6em;
}

.degree.imperial::after {
    content: "°F";
    font-size: 0.6em;
}

.currentWeather .weather, .infoRow {
    opacity: 0.85;
}

.infoRow {
    display: flex;
    gap: 0.5rem;
}

.windSpeed::before {
    content: "Wind: ";
}

.windSpeed.metric::after {
    content: "m/s";
    font-size: 0.8em;
}

.windSpeed.imperial::after {
    content: "mph";
    font-size: 0.8em;
}

.humidity::before {
    content: "Humid: ";
}

.humidity::after {
    content: "%";
    font-size: 0.8em;
}

.maxTemp::before {
    content: "H: ";
}

.minTemp::before {
    content: "L: ";
}

.maxTemp::after, .minTemp::after {
    content: "°";
}

.weatherForecast {
    margin: auto;
    width: max-content;
    background-color: rgba(0, 0, 0, 20%);
    padding: 1rem;
    display: flex;
    gap: 1rem;
}

.forecastBlock {
    display: flex;
    flex-direction: column;
    gap: 0.1rem;
    align-items: center;
}

.weatherForecast .time {
    font-size: 0.9rem;
}

.weatherForecast .temp {
    font-size: 1.5rem;
}

.weatherForecast .windSpeed,
.weatherForecast .humidity {
    font-size: 0.8rem;
}

.error {
    padding: 2rem;
    background-color: rgba(0, 0, 0, 20%);
    color: white;
    font-size: 1.2rem;
    text-shadow: 0.15rem 0.15rem 0.15rem rgba(0, 0, 0, 0.1);
}

.footer {
    margin: 0 auto;
    font-size: 0.9rem;
}

.loading {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    margin: auto;

    width: 4rem;
    height: 4rem;
    border-radius: 50%;
    border: 0.8rem solid rgba(0, 0, 0, 20%);
    border-top: 0.8rem solid white;
    animation: spin 1s linear infinite;
}
  
@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}